//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace PlatformClient.PlatformServer {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlatformCommandInfo", Namespace="http://schemas.datacontract.org/2004/07/PlatformService")]
    public partial class PlatformCommandInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CommandNameField;
        
        private PlatformClient.PlatformServer.CommandDirectionType CommandTypeField;
        
        private string ErrorMessageField;
        
        private System.Collections.Generic.List<PlatformClient.PlatformServer.ExecSQLCmd> ExecSqlField;
        
        private string ExecuteNonQueryResultField;
        
        private PlatformClient.PlatformServer.CommandDirectionType FromModelField;
        
        private System.Xml.Linq.XElement ParamCollectionField;
        
        private System.Xml.Linq.XElement PublicValueField;
        
        private string TableNameField;
        
        private System.Xml.Linq.XElement TempValueField;
        
        private PlatformClient.PlatformServer.CommandDirectionType ToModelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandName {
            get {
                return this.CommandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandNameField, value) != true)) {
                    this.CommandNameField = value;
                    this.RaisePropertyChanged("CommandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlatformClient.PlatformServer.CommandDirectionType CommandType {
            get {
                return this.CommandTypeField;
            }
            set {
                if ((this.CommandTypeField.Equals(value) != true)) {
                    this.CommandTypeField = value;
                    this.RaisePropertyChanged("CommandType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<PlatformClient.PlatformServer.ExecSQLCmd> ExecSql {
            get {
                return this.ExecSqlField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecSqlField, value) != true)) {
                    this.ExecSqlField = value;
                    this.RaisePropertyChanged("ExecSql");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecuteNonQueryResult {
            get {
                return this.ExecuteNonQueryResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecuteNonQueryResultField, value) != true)) {
                    this.ExecuteNonQueryResultField = value;
                    this.RaisePropertyChanged("ExecuteNonQueryResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlatformClient.PlatformServer.CommandDirectionType FromModel {
            get {
                return this.FromModelField;
            }
            set {
                if ((this.FromModelField.Equals(value) != true)) {
                    this.FromModelField = value;
                    this.RaisePropertyChanged("FromModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Xml.Linq.XElement ParamCollection {
            get {
                return this.ParamCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamCollectionField, value) != true)) {
                    this.ParamCollectionField = value;
                    this.RaisePropertyChanged("ParamCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Xml.Linq.XElement PublicValue {
            get {
                return this.PublicValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PublicValueField, value) != true)) {
                    this.PublicValueField = value;
                    this.RaisePropertyChanged("PublicValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Xml.Linq.XElement TempValue {
            get {
                return this.TempValueField;
            }
            set {
                if ((object.ReferenceEquals(this.TempValueField, value) != true)) {
                    this.TempValueField = value;
                    this.RaisePropertyChanged("TempValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlatformClient.PlatformServer.CommandDirectionType ToModel {
            get {
                return this.ToModelField;
            }
            set {
                if ((this.ToModelField.Equals(value) != true)) {
                    this.ToModelField = value;
                    this.RaisePropertyChanged("ToModel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommandDirectionType", Namespace="http://schemas.datacontract.org/2004/07/PlatformService")]
    public enum CommandDirectionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompositeControl = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DB = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Message = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClientUI = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExecSQLCmd", Namespace="http://schemas.datacontract.org/2004/07/PlatformService")]
    public partial class ExecSQLCmd : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CtrlNameField;
        
        private string ErrorField;
        
        private PlatformClient.PlatformServer.ExecSqlCmdType ExecTypeField;
        
        private string MethodNameField;
        
        private System.Xml.Linq.XElement ResultField;
        
        private string SqlField;
        
        private string TableNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CtrlName {
            get {
                return this.CtrlNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CtrlNameField, value) != true)) {
                    this.CtrlNameField = value;
                    this.RaisePropertyChanged("CtrlName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlatformClient.PlatformServer.ExecSqlCmdType ExecType {
            get {
                return this.ExecTypeField;
            }
            set {
                if ((this.ExecTypeField.Equals(value) != true)) {
                    this.ExecTypeField = value;
                    this.RaisePropertyChanged("ExecType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Xml.Linq.XElement Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sql {
            get {
                return this.SqlField;
            }
            set {
                if ((object.ReferenceEquals(this.SqlField, value) != true)) {
                    this.SqlField = value;
                    this.RaisePropertyChanged("Sql");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExecSqlCmdType", Namespace="http://schemas.datacontract.org/2004/07/PlatformService")]
    public enum ExecSqlCmdType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExecuteNonQuery = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Query = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExecuteScalar = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PlatformServer.IPlatformService")]
    public interface IPlatformService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformService/TextValue", ReplyAction="http://tempuri.org/IPlatformService/TextValueResponse")]
        System.IAsyncResult BeginTextValue(string aa, System.AsyncCallback callback, object asyncState);
        
        string EndTextValue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPlatformService/DoAction", ReplyAction="http://tempuri.org/IPlatformService/DoActionResponse")]
        System.IAsyncResult BeginDoAction(PlatformClient.PlatformServer.PlatformCommandInfo pci, System.AsyncCallback callback, object asyncState);
        
        PlatformClient.PlatformServer.PlatformCommandInfo EndDoAction(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlatformServiceChannel : PlatformClient.PlatformServer.IPlatformService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TextValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TextValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PlatformClient.PlatformServer.PlatformCommandInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PlatformClient.PlatformServer.PlatformCommandInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlatformServiceClient : System.ServiceModel.ClientBase<PlatformClient.PlatformServer.IPlatformService>, PlatformClient.PlatformServer.IPlatformService {
        
        private BeginOperationDelegate onBeginTextValueDelegate;
        
        private EndOperationDelegate onEndTextValueDelegate;
        
        private System.Threading.SendOrPostCallback onTextValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoActionDelegate;
        
        private EndOperationDelegate onEndDoActionDelegate;
        
        private System.Threading.SendOrPostCallback onDoActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PlatformServiceClient() {
        }
        
        public PlatformServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlatformServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlatformServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlatformServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<TextValueCompletedEventArgs> TextValueCompleted;
        
        public event System.EventHandler<DoActionCompletedEventArgs> DoActionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlatformClient.PlatformServer.IPlatformService.BeginTextValue(string aa, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTextValue(aa, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string PlatformClient.PlatformServer.IPlatformService.EndTextValue(System.IAsyncResult result) {
            return base.Channel.EndTextValue(result);
        }
        
        private System.IAsyncResult OnBeginTextValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string aa = ((string)(inValues[0]));
            return ((PlatformClient.PlatformServer.IPlatformService)(this)).BeginTextValue(aa, callback, asyncState);
        }
        
        private object[] OnEndTextValue(System.IAsyncResult result) {
            string retVal = ((PlatformClient.PlatformServer.IPlatformService)(this)).EndTextValue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTextValueCompleted(object state) {
            if ((this.TextValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TextValueCompleted(this, new TextValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TextValueAsync(string aa) {
            this.TextValueAsync(aa, null);
        }
        
        public void TextValueAsync(string aa, object userState) {
            if ((this.onBeginTextValueDelegate == null)) {
                this.onBeginTextValueDelegate = new BeginOperationDelegate(this.OnBeginTextValue);
            }
            if ((this.onEndTextValueDelegate == null)) {
                this.onEndTextValueDelegate = new EndOperationDelegate(this.OnEndTextValue);
            }
            if ((this.onTextValueCompletedDelegate == null)) {
                this.onTextValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTextValueCompleted);
            }
            base.InvokeAsync(this.onBeginTextValueDelegate, new object[] {
                        aa}, this.onEndTextValueDelegate, this.onTextValueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PlatformClient.PlatformServer.IPlatformService.BeginDoAction(PlatformClient.PlatformServer.PlatformCommandInfo pci, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoAction(pci, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlatformClient.PlatformServer.PlatformCommandInfo PlatformClient.PlatformServer.IPlatformService.EndDoAction(System.IAsyncResult result) {
            return base.Channel.EndDoAction(result);
        }
        
        private System.IAsyncResult OnBeginDoAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PlatformClient.PlatformServer.PlatformCommandInfo pci = ((PlatformClient.PlatformServer.PlatformCommandInfo)(inValues[0]));
            return ((PlatformClient.PlatformServer.IPlatformService)(this)).BeginDoAction(pci, callback, asyncState);
        }
        
        private object[] OnEndDoAction(System.IAsyncResult result) {
            PlatformClient.PlatformServer.PlatformCommandInfo retVal = ((PlatformClient.PlatformServer.IPlatformService)(this)).EndDoAction(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoActionCompleted(object state) {
            if ((this.DoActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoActionCompleted(this, new DoActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoActionAsync(PlatformClient.PlatformServer.PlatformCommandInfo pci) {
            this.DoActionAsync(pci, null);
        }
        
        public void DoActionAsync(PlatformClient.PlatformServer.PlatformCommandInfo pci, object userState) {
            if ((this.onBeginDoActionDelegate == null)) {
                this.onBeginDoActionDelegate = new BeginOperationDelegate(this.OnBeginDoAction);
            }
            if ((this.onEndDoActionDelegate == null)) {
                this.onEndDoActionDelegate = new EndOperationDelegate(this.OnEndDoAction);
            }
            if ((this.onDoActionCompletedDelegate == null)) {
                this.onDoActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoActionCompleted);
            }
            base.InvokeAsync(this.onBeginDoActionDelegate, new object[] {
                        pci}, this.onEndDoActionDelegate, this.onDoActionCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override PlatformClient.PlatformServer.IPlatformService CreateChannel() {
            return new PlatformServiceClientChannel(this);
        }
        
        private class PlatformServiceClientChannel : ChannelBase<PlatformClient.PlatformServer.IPlatformService>, PlatformClient.PlatformServer.IPlatformService {
            
            public PlatformServiceClientChannel(System.ServiceModel.ClientBase<PlatformClient.PlatformServer.IPlatformService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginTextValue(string aa, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = aa;
                System.IAsyncResult _result = base.BeginInvoke("TextValue", _args, callback, asyncState);
                return _result;
            }
            
            public string EndTextValue(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("TextValue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDoAction(PlatformClient.PlatformServer.PlatformCommandInfo pci, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pci;
                System.IAsyncResult _result = base.BeginInvoke("DoAction", _args, callback, asyncState);
                return _result;
            }
            
            public PlatformClient.PlatformServer.PlatformCommandInfo EndDoAction(System.IAsyncResult result) {
                object[] _args = new object[0];
                PlatformClient.PlatformServer.PlatformCommandInfo _result = ((PlatformClient.PlatformServer.PlatformCommandInfo)(base.EndInvoke("DoAction", _args, result)));
                return _result;
            }
        }
    }
}
